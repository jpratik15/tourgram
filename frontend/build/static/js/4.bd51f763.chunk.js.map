{"version":3,"sources":["shared/components/FormElements/Button.js","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/components/UIElements/Avatar.js","users/components/UserItem.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"names":["Button","props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","Card","style","ErrorModal","onCancel","onClear","header","show","error","footer","ModalOverlay","content","headerClass","onSubmit","event","preventDefault","contestClass","footerClass","ReactDOM","createPortal","document","getElementById","Modal","Fragment","in","mountOnEnter","unmountOnExit","timeout","classNames","Avatar","src","image","alt","width","height","UserItem","id","process","name","placeCount","Map","center","zoom","console","log","mapRef","useRef","useEffect","mapboxgl","accessToken","map","container","current","Marker","position","ref","PlaceItem","auth","useContext","AuthContext","useState","showMap","setShowMap","isLoading","setIsLoading","setError","closeMapHandler","deleteModal","setDeleteModal","hideDeleteModal","confirmDeleteHandler","a","fetch","method","headers","Authorization","token","onDelete","message","address","contentClass","coordinates","LoadingSpinner","asOverlay","title","description","userId","creatorId","PlaceList","items","length","place","key","creator","location","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","response","json","responseData","ok","Error","places","sendReq","placeId","prevPlaces","filter"],"mappings":"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","file":"static/js/4.bd51f763.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport { CSSTransition } from \"react-transition-group\" \r\n\r\nimport \"./BackDrop\";\r\nimport BackDrop from \"./BackDrop\";\r\nimport \"./Modal.css\";\r\n\r\nconst ModalOverlay = (props) => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`modal__content ${props.contestClass}`}>\r\n          {props.children}\r\n        </div>\r\n\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n            {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\nconst Modal = (props) => {\r\n    return(\r\n        <React.Fragment>\r\n            {props.show && <BackDrop onClick={props.onCancel}/>}\r\n            <CSSTransition in={props.show} mountOnEnter unmountOnExit timeout={200} classNames=\"modal\">\r\n                <ModalOverlay {...props}/>\r\n            </CSSTransition>\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default Modal;\r\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Avatar from \"../../shared/components/UIElements/Avatar\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport \"./UserItem.css\";\r\n\r\nconst UserItem = (props) => {\r\n  return (\r\n    <li className=\"user-item\">\r\n      <Card className=\"user-item__content\">\r\n        <Link to={`/${props.id}/places`}>\r\n          <div className=\"user-item__image\">\r\n            <Avatar image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.name} />\r\n          </div>\r\n          <div className=\"user-item__info\">\r\n            <h2>{props.name}</h2>\r\n            <h3>\r\n              {props.placeCount} {props.placeCount === 1 ? \"Place\" : \"Places\"}\r\n            </h3>\r\n          </div>\r\n        </Link>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default UserItem;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport mapboxgl from \"mapbox-gl\";\r\n\r\nimport \"./Map.css\";\r\n\r\nconst Map = (props) => {\r\n  const { center, zoom } = props;\r\n  console.log(center);\r\n  const mapRef = useRef();\r\n  useEffect(() => {\r\n    // mapboxgl.accessToken =APIKEY;\r\n    mapboxgl.accessToken =\r\n      \"pk.eyJ1IjoianByYXRpazE1IiwiYSI6ImNrbHoyem50djJnMmMycW1wNjJkanh0YTIifQ.gGccuPvPWneomS_E1JoWUQ\";\r\n    const map = new mapboxgl.Map({\r\n      container: mapRef.current,\r\n      style: \"mapbox://styles/mapbox/streets-v11\",\r\n        center: center,\r\n      zoom: zoom,\r\n    });\r\n    new mapboxgl.Marker({ position: center, map: map });\r\n  }, [center, zoom]);\r\n  return (\r\n    <div\r\n      ref={mapRef}\r\n      className={`map ${props.className}`}\r\n      style={props.style}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React, { useState, useContext } from \"react\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Modal from \"../../shared/components/UIElements/Modal\";\r\nimport Map from \"../../shared/components/UIElements/Map\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport \"./PlaceItem.css\";\r\n\r\nconst PlaceItem = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  let [showMap, setShowMap] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const openMapHandler = () => {\r\n    setShowMap(true);\r\n  };\r\n\r\n  const closeMapHandler = () => {\r\n    setShowMap(false);\r\n  };\r\n\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n\r\n  const showDeleteModal = () => {\r\n    setDeleteModal(true);\r\n  };\r\n\r\n  const hideDeleteModal = () => {\r\n    setDeleteModal(false);\r\n  };\r\n\r\n  const confirmDeleteHandler = async () => {\r\n    setDeleteModal(false);\r\n    try {\r\n      setIsLoading(true);\r\n      await fetch(`${process.env.REACT_APP_BACKEND_URL}/places/${props.id}`,{\r\n        method: \"DELETE\",\r\n        headers : {\r\n          Authorization: \"Bearer \" +auth.token \r\n        }\r\n    })\r\n      setIsLoading(false);\r\n      props.onDelete(props.id);\r\n    } catch (error) {\r\n      setError(error.message);\r\n      setIsLoading(false);\r\n    }\r\n\r\n  };\r\n\r\n  const errorHandler =  () => {\r\n    setError(null);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error = {error} onClear = {errorHandler}/>\r\n      <Modal\r\n        show={showMap}\r\n        onCancel={closeMapHandler}\r\n        header={props.address}\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n      >\r\n        <div className=\"map-container\">\r\n          <Map center={props.coordinates} zoom={16} />\r\n        </div>\r\n      </Modal>\r\n\r\n      <Modal\r\n        show={deleteModal}\r\n        onCancel={hideDeleteModal}\r\n        header=\"Are you Sure?\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={\r\n          <React.Fragment>\r\n            <Button inverse onClick={hideDeleteModal}>\r\n              CANCEL\r\n            </Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              DELETE\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <p>This action cannot be reversed!</p>\r\n      </Modal>\r\n\r\n      <li className=\"place-item\">\r\n        <Card className=\"place-item__content\">\r\n          {isLoading && <LoadingSpinner asOverlay/>}\r\n          <div className=\"place-item__image\">\r\n            <img src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.title} />\r\n          </div>\r\n          <div className=\"place-item__info\">\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.address}</h3>\r\n            <p>{props.description}</p>\r\n          </div>\r\n          <div className=\"place-item__actions\">\r\n            <Button inverse onClick={openMapHandler}>\r\n              VIEW ON MAP\r\n            </Button>\r\n            {auth.userId === props.creatorId && (\r\n              <Button to={`/places/${props.id}`}>EDIT</Button>\r\n            )}\r\n            {auth.userId === props.creatorId && (\r\n              <Button danger onClick={showDeleteModal}>\r\n                DELETE\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React from \"react\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport PlaceItem from \"./PlaceItem\";\r\nimport Button from \"../../shared/components/FormElements/Button\"\r\nimport \"./PlaceList.css\";\r\n\r\nconst PlaceList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"place-list center\">\r\n        <Card>\r\n          <h2>No Place Found,Maybe create one?</h2>\r\n            <Button to=\"/places/new\">Share Place</Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"place-list\">\r\n      {props.items.map((place) => (\r\n        <PlaceItem\r\n          key={place.id}\r\n          id={place.id}\r\n          image={place.image}\r\n          title={place.title}\r\n          description={place.description}\r\n          address={place.address}\r\n          creatorId={place.creator}\r\n          coordinates={place.location}\r\n          onDelete = {props.onDelete}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PlaceList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport UserItem from \"../../users/components/UserItem\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport PlaceList from \"../../places/components/PlaceList\";\r\n\r\nconst UserPlaces = (props) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n  const [loadedPlaces, setLoadedPlaces] = useState();\r\n\r\n  const userId = useParams().userId;\r\n\r\n  useEffect(() => {\r\n    const sendReq = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await fetch(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\r\n        );\r\n        const responseData = await response.json();\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n\r\n        setLoadedPlaces(responseData.places);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n    sendReq();\r\n  }, []);\r\n\r\n  const errorHandler = () => {\r\n    setError(null);\r\n  };\r\n\r\n  const deleteHandler = (placeId) =>{\r\n    setLoadedPlaces(prevPlaces => prevPlaces.filter(place => place.id !== placeId));\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={errorHandler} />\r\n      {isLoading && <div className=\"center\"><LoadingSpinner /></div>}\r\n      {!isLoading && loadedPlaces && <PlaceList items={loadedPlaces} onDelete = {deleteHandler}/>}\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default UserPlaces;\r\n"],"sourceRoot":""}